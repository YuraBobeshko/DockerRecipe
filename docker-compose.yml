version: "3.3"

services:
  traefik:
    image: "traefik"
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true" #- включают что-то
      - "--providers.docker=true" #- включают работу в докере-композе
      - "--providers.docker.exposedbydefault=false" #- включают что-то
      - "--entrypoints.web.address=:4000" #- настраваем порт по которому будем слушать сервер
      - "--entrypoints.myadmin.address=:8081" #- настраваем порт по которому будем слушать myadmin
    ports:
      - "4000:4000" #- мапим порты
      - "8080:8080" #- мапим порты
      - "8081:8081" #- мапим порты
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" #- передаем докер сокет для получение инфы о другмх контейнерах
  backend:
    image: "node:14.15.0-stretch"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=4001"
    volumes:
      - ./api:/usr/src/api
    working_dir: /usr/src/api
    command: npm start
  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Path(`/test`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  mysql:
    image: mysql:8
    volumes:
      - ./mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_DATABASE: recipe
      MYSQL_ROOT_PASSWORD: password
  myadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myadmin.rule=Host(`localhost`)" #- myadmin - название роута
      - "traefik.http.routers.myadmin.entrypoints=myadmin" #- название роутера
    links:
      - mysql
  build:
    build: ./
    links:
      - mysql
    volumes:
      - ./api:/usr/src/api
